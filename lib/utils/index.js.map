{"version":3,"file":"index.js","sources":["../../qc-components/utils/FetchUtils.js"],"sourcesContent":["export class Fetch {\n    /**\n     * 默认请求配置\n     */\n    defaultConfig;\n    /**\n     * 请求拦截器\n     */\n    requestInterceptor = [];\n    /**\n     * 响应拦截器\n     */\n    responseInterceptor = [];\n    /**\n     *  构造函数\n     * @param defaultConfig 默认请求配置\n     */\n    constructor(defaultConfig) {\n        this.defaultConfig = defaultConfig;\n    }\n    /**\n     *  创建一个请求工具\n     * @param defaultConfig  默认请求配置\n     * @returns  返回请求工具\n     */\n    static createService(defaultConfig) {\n        return new Fetch(defaultConfig);\n    }\n    async request(config) {\n        config = { ...this.defaultConfig, ...config };\n        // 请求拦截器\n        for (const interceptor of this.requestInterceptor) {\n            config = await interceptor(config);\n        }\n        const baseurl = config.baseURL?.endsWith(\"/\")\n            ? config.baseURL\n            : config.baseURL + \"/\";\n        let requestUrl = baseurl ? baseurl + config.url : config.url;\n        // 尝试用config中的转换器把params转换成字符串\n        let paramsStr = \"\";\n        if (config.params) {\n            const params = config.params;\n            if (config.paramsSerializer) {\n                paramsStr = config.paramsSerializer(params);\n            }\n            else {\n                paramsStr = Object.keys(params)\n                    .map((key) => `${key}=${params[key]}`)\n                    .join(\"&\");\n            }\n            requestUrl += \"?\" + paramsStr;\n        }\n        if (config.transformRequest) {\n            const { data, headers } = config.transformRequest(config.data, config.headers);\n            config.headers = headers;\n            config.data = data;\n        }\n        const requset = new Request(requestUrl, {\n            method: config.method,\n            headers: config.headers,\n            body: config.data,\n            mode: \"cors\",\n            cache: \"no-cache\",\n            credentials: \"same-origin\",\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer-when-downgrade\",\n        });\n        // 发送请求\n        const response = await fetch(requset);\n        if (config.transformResponse) {\n            return config.transformResponse(response);\n        }\n        // 响应拦截器\n        // \tresponseType?:\n        // | \"arraybuffer\"\n        // | \"document\"\n        // | \"json\"\n        // | \"text\"\n        // | \"stream\"\n        // | \"blob\";\n        // responseType存在且为json时，返回json数据，要经过拦截器处理，否则直接返回response\n        switch (config.responseType) {\n            case \"json\":\n                return this.responseInterceptor.reduce(async (data, interceptor) => {\n                    return interceptor(await data);\n                }, response.json());\n            case \"text\":\n                return response.text();\n            case \"blob\":\n                return response.blob();\n            case \"arraybuffer\":\n                return response.arrayBuffer();\n            case \"stream\":\n                return response.body;\n            case \"document\":\n                return response.text();\n            default:\n                return response;\n        }\n    }\n    addRequestInterceptor(interceptor, order) {\n        if (order) {\n            this.requestInterceptor.splice(order, 0, interceptor);\n        }\n        else {\n            this.requestInterceptor.push(interceptor);\n        }\n    }\n    addResponseInterceptor(interceptor, order) {\n        if (order) {\n            this.responseInterceptor.splice(order, 0, interceptor);\n        }\n        else {\n            this.responseInterceptor.push(interceptor);\n        }\n    }\n    get(url, config) {\n        return this.request({\n            ...config,\n            url,\n            method: \"get\",\n        });\n    }\n    post(url, data, config) {\n        return this.request({\n            ...config,\n            url,\n            method: \"post\",\n            data,\n        });\n    }\n    put(url, data, config) {\n        return this.request({\n            ...config,\n            url,\n            method: \"put\",\n            data,\n        });\n    }\n    delete(url, config) {\n        return this.request({\n            ...config,\n            url,\n            method: \"delete\",\n        });\n    }\n    patch(url, data, config) {\n        return this.request({\n            ...config,\n            url,\n            method: \"patch\",\n            data,\n        });\n    }\n    head(url, config) {\n        return this.request({\n            ...config,\n            url,\n            method: \"head\",\n        });\n    }\n    options(url, config) {\n        return this.request({\n            ...config,\n            url,\n            method: \"options\",\n        });\n    }\n    connect(url, config) {\n        return this.request({\n            ...config,\n            url,\n            method: \"connect\",\n        });\n    }\n    trace(url, config) {\n        return this.request({\n            ...config,\n            url,\n            method: \"trace\",\n        });\n    }\n    req(config) {\n        return this.request(config);\n    }\n}\n//# sourceMappingURL=FetchUtils.js.map"],"names":["Fetch","defaultConfig","__publicField","config","_a","interceptor","baseurl","requestUrl","paramsStr","params","key","data","headers","requset","response","order","url"],"mappings":"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"}